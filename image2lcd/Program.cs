using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;

namespace image2lcd
{
    internal class Program
    {
        private static void Main(string[] args)
        {
            Console.WriteLine("/* all my homies hate radzio dxp \nGenerated by Gitmanik's image2lcd 2022 */");
            if (args.Length == 0)
            {
                string[] filters = new string[] { "jpg", "jpeg", "png", "gif", "tiff", "bmp", "svg" };
                string[] files = GetFilesFrom(Environment.CurrentDirectory, filters, false);
                foreach (string y in files)
                    Convert(y);
            }
            else
            {
                Convert(args[0]);
            }

            Console.ReadLine();
        }

        public static string[] GetFilesFrom(string searchFolder, string[] filters, bool isRecursive)
        {
            List<string> filesFound = new List<string>();
            SearchOption searchOption = isRecursive ? SearchOption.AllDirectories : SearchOption.TopDirectoryOnly;
            foreach (string filter in filters)
            {
                filesFound.AddRange(Directory.GetFiles(searchFolder, string.Format("*.{0}", filter), searchOption));
            }
            return filesFound.ToArray();
        }

        private static void Convert(string filepath)
        {
            Bitmap src = new Bitmap(Image.FromFile(filepath));
            src = src.Clone(new Rectangle(0, 0, src.Width, src.Height), PixelFormat.Format1bppIndexed);

            int[] output = new int[src.Width + src.Height / 8 * src.Width];

            for (int x = 0; x < src.Width; x++)
            {
                for (int y = 0; y < src.Height; y++)
                {
                    bool bit = src.GetPixel(x, y).R == 0;
                    output[x + (y / 8) * src.Width] |= (bit ? 1 : 0) << (y % 8);
                }
            }

            Console.WriteLine($"const unsigned char {Path.GetFileNameWithoutExtension(filepath)}[] = {{{string.Join(", ", output.Select(bit => "0x" + bit.ToString("X2")))}}}; // {src.Width}x{src.Height}");
        }
    }
}
